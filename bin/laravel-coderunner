#!/usr/bin/env php
<?php

/*
 * Path to Laravel application (fallback to default laravel app)
 */
define('LARAVEL_CODERUNNER_PROJECT_PATH', $argv[2] ?? __DIR__ . '/default-laravel');
define('LARAVEL_CODERUNNER_PROJECT_ROOT', LARAVEL_CODERUNNER_PROJECT_PATH . '/public');

/*
 * Variable for laravel-coderunner configuration
 */
$laravelCodeRunner = [
    'laravel_version' => null,
];

/*
 * Build path to composer.lock
 */
$laravelCodeRunner['composer_path'] = LARAVEL_CODERUNNER_PROJECT_PATH . '/composer.lock';

if (file_exists($laravelCodeRunner['composer_path'])) {
    try {
        /*
         * Read and decode composer.lock
         */
        $laravelCodeRunner['composer_lock'] = json_decode(file_get_contents($laravelCodeRunner['composer_path']), true);
    } catch (Exception $e) {
        die('Unable to read contents of composer.lock for project.' . PHP_EOL);
    }

    /*
     * Iterate over installed packages to find laravel/framework installation
     */
    foreach ($laravelCodeRunner['composer_lock']['packages'] ?? [] as $package) {
        if ($package['name'] === 'laravel/framework') {
            $laravelCodeRunner['laravel_version'] = preg_replace('/[^0-9\.]/', '', $package['version']);
            break;
        }
    }

    /*
     * Check laravel installation
     */
    if (!$laravelCodeRunner['laravel_version']) {
        die('Unable to locate laravel installation in path.' . PHP_EOL);
    }
} else {
    die('Unable to locate composer.lock for project.' . PHP_EOL);
}

/*
 * Check laravel version and boot application accordingly
 */
if (version_compare($laravelCodeRunner['laravel_version'], '5.5.0', '>=')) {
    require_once __DIR__.'/../src/boot/laravel.php';
} else {
    die('Laravel ' . $laravelCodeRunner['laravel_version'] . ' not supported' . PHP_EOL);
}

/*
 * Run coderunner script
 */
if (substr($argv[1], 0, 1) === '/') {
    require_once $argv[1];
} else {
    require_once trim(shell_exec('pwd')) . '/' . $argv[1];
}
